# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="${HOME}/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="afowler"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
export PATH=$PATH:${HOME}/.local/bin/

set -o vi
bindkey "^R" history-incremental-search-backward

alias ll="ls -alhtr"
alias t="tmux"
alias ta="t a -t"
alias tls="t ls"
alias tn="t new-session -s"

function pcsv {
    perl -pe 's/((?<=,)|(?<=^)),/ ,/g;' "$@" | column -t -s, | less  -F -S -X -K
}

alias jl="jupyter lab"
source <(fzf --zsh)

# Check if the config already exists
if ! git config --global --get oh-my-zsh.hide-dirty &>/dev/null; then
  # Only add if not already present
  git config --global --add oh-my-zsh.hide-dirty 1
fi
CC=clang

DOTNET_CLI_TELEMETRY_OPTOUT=1
eval "$(starship init zsh)"

alias vim='nvim'

function source_file_if_exists() {
  local file="$1"
  [[ -f $file ]] && source $file
}
source_file_if_exists ${HOME}/.work-config.zsh
source_file_if_exists ${HOME}/.personal-config.zsh

if [ -f "/opt/conda/etc/profile.d/conda.sh" ]; then
    __conda_setup="$('/opt/conda/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
    if [ $? -eq 0 ]; then
        eval "$__conda_setup"
    else
        if [ -f "/opt/conda/etc/profile.d/conda.sh" ]; then
            . "/opt/conda/etc/profile.d/conda.sh"
        else
            export PATH="/opt/conda/bin:$PATH"
        fi
    fi
    conda activate base
    unset __conda_setup
elif [ -f "${HOME}/micromamba/etc/profile.d/mamba.sh" ]; then

    export MAMBA_EXE="${HOME}/.local/bin/micromamba";
    export MAMBA_ROOT_PREFIX="${HOME}/micromamba";
    __mamba_setup="$("$MAMBA_EXE" shell hook --shell zsh --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
    if [ $? -eq 0 ]; then
        eval "$__mamba_setup"
    else
        if [ -f "${HOME}/micromamba/etc/profile.d/mamba.sh" ]; then
            . "${HOME}/micromamba/etc/profile.d/mamba.sh"
        else
            export  PATH="${HOME}/micromamba/bin:$PATH"  # extra space after export prevents interference from conda init
        fi
    fi
    micromamba activate base
    unset __mamba_setup

else
fi


function pretty_csv {
    if [[ $# -gt 1 ]]; then
        echo "Usage: pretty_csv [file.csv] or cat file.csv | pretty_csv"
        return 1
    fi

    if [[ $# -eq 1 ]]; then
        if [[ ! -f $1 ]]; then
            echo "Error: File '$1' not found."
            return 1
        fi
        mlr --icsv --opprint --barred cat "$1" | less -S
    else
        mlr --icsv --opprint --barred cat | less -S
    fi
}


alias kss="kitty +kitten ssh"

if [[ -f "$HOME/.cargo/env" ]]; then
    source "$HOME/.cargo/env"
fi

if [[ -d "$HOME/.local/go" ]]; then
    export PATH=$PATH:$HOME/.local/go/bin
fi

if command -v go &> /dev/null; then
    export PATH=$PATH:$(go env GOPATH)/bin
fi

if [[ -d "$HOME/.local/node" ]]; then
    export PATH=$PATH:$HOME/.local/node/bin
fi

if [[ -d "$HOME/.local/kitty.app" ]]; then
    export PATH=$PATH:$HOME/.local/kitty.app/bin
fi

if command -v bat &>/dev/null; then
    # --style=plain - removes line numbers and git modifications
    # --paging=never - doesnt pipe it through less
    alias cat='bat --paging=never --style=plain'
    alias catt='bat'
    alias cata='bat --show-all --paging=never'
fi

alias gs="git status"
alias wget="wget --content-disposition"
alias icat="kitty +kitten icat"

function rss() {
    filename=$1
    resize=$2
    if [[ -z $filename ]]; then
        echo "Usage: extract <filename> [resize]"
        return 1
    fi
    if [[ -z $resize ]]; then
        resize="300"
    fi
    convert -resize "${resize}%" "$filename" jpg:- | kitty +kitten icat

}
